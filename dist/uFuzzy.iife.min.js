/*! https://github.com/leeoniya/uFuzzy (v1.0.3) */
var uFuzzy=function(){"use strict";const t=new Intl.Collator("en").compare,e=1/0,l=/(?:\s+|^)-[a-z\d]+/gi,n={interSplit:"[^A-Za-z0-9']+",intraSplit:"[a-z][A-Z]",intraBound:"[A-Za-z][0-9]|[0-9][A-Za-z]|[a-z][A-Z]",interLft:0,interRgt:0,interChars:".",interIns:e,intraChars:"[a-z\\d']",intraIns:0,intraContr:"'[a-z]{1,2}\\b",intraMode:0,intraSlice:[1,e],intraSub:0,intraTrn:0,intraDel:0,intraFilt:()=>!0,sort:(e,l)=>{let{idx:n,chars:r,terms:i,interLft2:s,interLft1:a,start:g,intraIns:h,interIns:f}=e;return n.map(((t,e)=>e)).sort(((e,c)=>r[c]-r[e]||h[e]-h[c]||i[c]+s[c]+.5*a[c]-(i[e]+s[e]+.5*a[e])||f[e]-f[c]||g[e]-g[c]||t(l[n[e]],l[n[c]])))}},r=(t,l)=>0==l?"":1==l?t+"??":l==e?t+"*?":t+`{0,${l}}?`,i="(?:\\b|_)";function s(t){t=Object.assign({},n,t);const{interLft:e,interRgt:s,intraMode:a,intraSlice:h,intraIns:f,intraSub:c,intraTrn:o,intraDel:u,intraContr:p,intraSplit:m,interSplit:b,intraBound:x,intraChars:d}=t;let{intraRules:R}=t;null==R&&(R=t=>{let e=n.intraSlice,l=0,r=0,i=0,s=0,a=t.length;return a>4?(e=h,l=f,r=c,i=o,s=u):3>a||(i=Math.min(o,1),4==a&&(l=Math.min(f,1))),{intraSlice:e,intraIns:l,intraSub:r,intraTrn:i,intraDel:s}});let S=!!m,I=RegExp(m,"g"),A=RegExp(b,"g"),E=RegExp("^"+b+"|"+b+"$","g"),z=RegExp(p,"gi");const k=t=>(t=t.replace(E,"").toLowerCase(),S&&(t=t.replace(I,(t=>t[0]+" "+t[1]))),t.split(A).filter((t=>""!=t))),y=(l,n=0,g=!1)=>{let h=k(l);if(0==h.length)throw"Empty needle!";let c,o=Array(h.length).fill("");if(h=h.map(((t,e)=>t.replace(z,(t=>(o[e]=t,""))))),1==a)c=h.map(((t,e)=>{let{intraSlice:l,intraIns:n,intraSub:i,intraTrn:s,intraDel:a}=R(t);if(n+i+s+a==0)return t+o[e];let[g,h]=l,f=t.slice(0,g),c=t.slice(h),u=t.slice(g,h);1==n&&1==f.length&&f!=u[0]&&(f+="(?!"+f+")");let p=u.length,m=[];if(i)for(let t=0;p>t;t++)m.push(f+u.slice(0,t)+d+u.slice(t+1)+c);if(s)for(let t=0;p-1>t;t++)u[t]!=u[t+1]&&m.push(f+u.slice(0,t)+u[t+1]+u[t]+u.slice(t+2)+c);if(a)for(let t=0;p>t;t++)m.push(f+u.slice(0,t+1)+"?"+u.slice(t+1)+c);if(n){let t=r(d,1);for(let e=0;p>e;e++)m.push(f+u.slice(0,e)+t+u.slice(e)+c)}return"(?:"+t+"|"+m.join("|")+")"+o[e]}));else{let t=r(d,f);2==n&&f>0&&(t=")("+t+")("),c=h.map(((e,l)=>e.split("").map(((t,e,l)=>(1==f&&0==e&&l.length>1&&t[e]!=t[e+1]&&(t+="(?!"+t+")"),t))).join(t)+o[l]))}let u=2==e?i:"",p=2==s?i:"",m=p+r(t.interChars,t.interIns)+u;return n>0?g?c=u+"("+c.join(")"+p+"|"+u+"(")+")"+p:(c="("+c.join(")("+m+")(")+")",c="(.?"+u+")"+c+"("+p+".*)"):(c=c.join(m),c=u+c+p),[RegExp(c,"i"),h,o]},C=(t,e,l)=>{let n=[],[r]=y(e);if(null!=l)for(let e=0;l.length>e;e++){let i=l[e];r.test(t[i])&&n.push(i)}else for(let e=0;t.length>e;e++)r.test(t[e])&&n.push(e);return n};let L=!!x,j=RegExp(b),w=RegExp(x);const M=(l,n,r)=>{let[i,a,g]=y(r,1),[h]=y(r,2),f=a.length,c=l.length,o=Array(c).fill(0),u={idx:Array(c),start:o.slice(),chars:o.slice(),terms:o.slice(),interIns:o.slice(),intraIns:o.slice(),interLft2:o.slice(),interRgt2:o.slice(),interLft1:o.slice(),interRgt1:o.slice(),ranges:Array(c)},p=1==e||1==s,m=0;for(let r=0;l.length>r;r++){let c=n[l[r]],o=c.match(i),b=o.index+o[1].length,x=b,d=!1,R=0,S=0,I=0,A=0,E=0,z=0,k=0,y=0,C=[];for(let l=0,n=2;f>l;l++,n+=2){let r=o[n].toLowerCase(),i=a[l]+g[l],h=i.length,u=r.length,m=r==i;if(!m&&o[n+1].length>=h){let t=o[n+1].toLowerCase().indexOf(i);t>-1&&(C.push(x,t,h),x+=Z(o,n,t,h),r=i,u=h,m=!0,0==l&&(b=x))}if(p||m){let t=x-1,l=x+u,a=!0,g=!0;if(-1==t||j.test(c[t]))m&&R++;else{if(2==e){d=!0;break}if(L&&w.test(c[t]+c[t+1]))m&&S++;else{if(1==e){let t=o[n+1],e=x+u;if(t.length>=h){let l,s=0,a=!1,g=RegExp(i,"ig");for(;l=g.exec(t);){s=l.index;let t=e+s,n=t-1;if(-1==n||j.test(c[n])){R++,a=!0;break}if(w.test(c[n]+c[t])){S++,a=!0;break}}if(a){C.push(x,s,h),x+=Z(o,n,s,h),r=i,u=h,m=!0;break}}d=!0;break}a=!1}}if(l==c.length||j.test(c[l]))m&&I++;else{if(2==s){d=!0;break}if(L&&w.test(c[l-1]+c[l]))m&&A++;else{if(1==s){d=!0;break}g=!1}}m&&(E+=h,a&&g&&z++)}if(u>h&&(y+=u-h),l>0&&(k+=o[n-1].length),!t.intraFilt(i,r,x)){d=!0;break}f-1>l&&(x+=u+o[n+1].length)}if(!d){u.idx[m]=l[r],u.interLft2[m]=R,u.interLft1[m]=S,u.interRgt2[m]=I,u.interRgt1[m]=A,u.chars[m]=E,u.terms[m]=z,u.interIns[m]=k,u.intraIns[m]=y,u.start[m]=b;let t=c.match(h),e=u.ranges[m]=[],n=t.index+t[1].length,i=n,s=n,a=C.length,g=a>0?0:1/0,f=a-3;for(let l=2;t.length>l;l++){let r=t[l].length;if(g>f||C[g]!=n)n+=r;else{let e=C[g+2],s=C[g+1]+e;n+=r+s,i=n-e,t[l+1]=t[l+1].slice(s),g+=3}l%2==0?s=n:r>0&&(e.push(i,s),i=s=n)}s>i&&e.push(i,s),m++}}if(l.length>m)for(let t in u)u[t]=u[t].slice(0,m);return u},Z=(t,e,l,n)=>{let r=t[e]+t[e+1].slice(0,l);return t[e-1]+=r,t[e]=t[e+1].slice(l,l+n),t[e+1]=t[e+1].slice(l+n),r.length};return{search:(...e)=>((e,n,r=!1,i=1e3,s)=>{let a,h=null,f=null,c=[];if(n=n.replace(l,(t=>(c.push(t.trim().slice(1)),""))),c.length>0&&(a=RegExp(c.join("|"),"i"),""==n.trim())){let t=[];for(let l=0;e.length>l;l++)a.test(e[l])||t.push(l);return[t,null,null]}if(r){let t=k(n);if(t.length>1){let l=t.slice().sort(((t,e)=>e.length-t.length));for(let t=0;l.length>t;t++){if(0==s?.length)return[[],null,null];s=C(e,l[t],s)}h=g(t).map((t=>t.join(" "))),f=[];let n=new Set;for(let t=0;h.length>t;t++)if(s.length>n.size){let l=s.filter((t=>!n.has(t))),r=C(e,h[t],l);for(let t=0;r.length>t;t++)n.add(r[t]);f.push(r)}else f.push([])}}null==h&&(h=[n],f=[s?.length>0?s:C(e,n)]);let o=null,u=null;if(c.length>0&&(f=f.map((t=>t.filter((t=>!a.test(e[t])))))),i>=f.reduce(((t,e)=>t+e.length),0)){o={},u=[];for(let l=0;f.length>l;l++){let n=f[l];if(null==n||0==n.length)continue;let r=h[l],i=M(n,e,r),s=t.sort(i,e,r);if(l>0)for(let t=0;s.length>t;t++)s[t]+=u.length;for(let t in i)o[t]=(o[t]??[]).concat(i[t]);u=u.concat(s)}}return[[].concat(...f),o,u]})(...e),split:k,filter:C,info:M,sort:t.sort}}const a=(()=>{let t={A:"ÁÀÃÂÄĄ",a:"áàãâäą",E:"ÉÈÊËĖ",e:"éèêëę",I:"ÍÌÎÏĮ",i:"íìîïį",O:"ÓÒÔÕÖ",o:"óòôõö",U:"ÚÙÛÜŪŲ",u:"úùûüūų",C:"ÇČ",c:"çč",N:"Ñ",n:"ñ",S:"Š",s:"š"},e=new Map,l="";for(let n in t)t[n].split("").forEach((t=>{l+=t,e.set(t,n)}));let n=RegExp(`[${l}]`,"g"),r=t=>e.get(t);return t=>{if("string"==typeof t)return t.replace(n,r);let e=Array(t.length);for(let l=0;t.length>l;l++)e[l]=t[l].replace(n,r);return e}})();function g(t){let e,l,n=(t=t.slice()).length,r=[t.slice()],i=Array(n).fill(0),s=1;for(;n>s;)s>i[s]?(e=s%2&&i[s],l=t[s],t[s]=t[e],t[e]=l,++i[s],s=1,r.push(t.slice())):(i[s]=0,++s);return r}const h=(t,e)=>e?`<mark>${t}</mark>`:t,f=(t,e)=>t+e;return s.latinize=a,s.permute=t=>g([...Array(t.length).keys()]).sort(((t,e)=>{for(let l=0;t.length>l;l++)if(t[l]!=e[l])return t[l]-e[l];return 0})).map((e=>e.map((e=>t[e])))),s.highlight=function(t,e,l=h,n="",r=f){n=r(n,l(t.substring(0,e[0]),!1))??n;for(let i=0;e.length>i;i+=2)n=r(n,l(t.substring(e[i],e[i+1]),!0))??n,e.length-3>i&&(n=r(n,l(t.substring(e[i+1],e[i+2]),!1))??n);return r(n,l(t.substring(e[e.length-1]),!1))??n},s}();
