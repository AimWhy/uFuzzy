/*! https://github.com/leeoniya/uFuzzy (v0.0.1) */
var uFuzzy=function(){"use strict";const t=new Intl.Collator("en").compare,e=1/0,r=/\d/,i=navigator.userAgent.toLowerCase(),n=!(-1!=i.indexOf("safari")&&-1==i.indexOf("chrome")),s={interSplit:"[^A-Za-z0-9]+",intraSplit:"[A-Za-z][0-9]|[0-9][A-Za-z]|[a-z][A-Z]",strictPre:!1,strictSuf:!1,upperChars:"[A-Z]",lowerChars:"[a-z]",interChars:".",interLimit:e,intraChars:"[\\w-]",intraLimit:0,withRanges:!1,sort:(e,r)=>{let{idx:i,term:n,pre0:s,pre1:l,suf0:a,suf1:p,start:h,intra:g,inter:o}=e;return i.map(((t,e)=>e)).sort(((e,u)=>g[e]-g[u]||n[u]+s[u]+.5*l[u]+a[u]+.5*p[u]-(n[e]+s[e]+.5*l[e]+a[e]+.5*p[e])||o[e]-o[u]||h[e]-h[u]||t(r[i[e]],r[i[u]])))}},l=(t,r)=>0==r?"":1==r?t+"??":r==e?t+"*?":t+`{0,${r}}?`;return function(t){t=Object.assign({},s,t);let e=RegExp(t.intraSplit,"g"),i=RegExp(t.interSplit,"g");const a=RegExp(t.upperChars),p=e=>r.test(e)?"\\d":a.test(e)?t.upperChars:t.lowerChars,h=(r,s=0)=>{let a=r.trim().replace(e,(t=>t[0]+" "+t[1])).split(i),h=l(t.intraChars,t.intraLimit);2==s&&t.intraLimit>0&&(h=")("+h+")(");let g=a.map((t=>t.split("").join(h)));t.strictPre&&(g=g.map(n?t=>"(?<!"+p(t[0])+")"+t:t=>"\\b"+t)),t.strictSuf&&(g=g.map((t=>t+"(?!"+p(t.at(-1))+")")));let o=l(t.interChars,t.interLimit);return g=s>0?"("+g.join(")("+o+")(")+")":g.join(o),[RegExp(g,"i"),a]};let g=RegExp(t.interSplit),o=RegExp(t.intraSplit);return{filter:(t,e)=>{let r=[],[i]=h(e);for(let e=0;t.length>e;e++)i.test(t[e])&&r.push(e);return r},info:(e,r,i)=>{let n,[s,l]=h(i,1);t.withRanges&&([n]=h(i,2));let a=Array(e.length).fill(0),p={idx:e,start:a.slice(),term:a.slice(),inter:a.slice(),intra:a.slice(),pre0:a.slice(),suf0:a.slice(),pre1:a.slice(),suf1:a.slice(),ranges:t.withRanges?Array(e.length):null};for(let i=0;e.length>i;i++){let a=r[e[i]],h=a.match(s),u=h.index;for(let e=0,r=1;l.length>e;e++,r+=2){let n=h[r].toLowerCase(),s=n==l[e];if(!s&&t.intraLimit>0){let t=n.indexOf(l[e]);t>-1&&(s=!0,u+=t,h[r]=h[r].slice(t),0==e&&(h.index=u))}if(s){let t=u-1,e=u+h[r].length,n=!0,s=!0;-1==t||g.test(a[t])?p.pre0[i]++:o.test(a[t]+a[t+1])?p.pre1[i]++:n=!1,e==a.length||g.test(a[e])?p.suf0[i]++:o.test(a[e-1]+a[e])?p.suf1[i]++:s=!1,n&&s&&p.term[i]++}else p.intra[i]+=n.length-l[e].length;e>0&&(p.inter[i]+=h[r-1].length),l.length-1>e&&(u+=h[r].length+h[r+1].length)}if(p.start[i]=h.index,t.withRanges){let t=a.match(n),e=p.ranges[i]=[],r=t.index,s=r,l=r;for(let i=1;t.length>i;i++){let n=t[i].length;r+=n,i%2?l=r:n>0&&(e.push(s,l),s=l=r)}l>s&&e.push(s,l)}}return p},sort:t.sort}}}();
