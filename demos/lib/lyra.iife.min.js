var lyra=function(e){"use strict";const n={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},s={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},t="[aeiouy]",i="[^aeiou][^aeiouy]*",o=t+"[aeiou]*",a="^("+i+")?"+o+i,r="^("+i+")?"+o+i+o+i,u="^("+i+")?"+t;function l(e){let o,l,d,c,h,m;if(3>e.length)return e;const f=e.substring(0,1);if("y"==f&&(e=f.toUpperCase()+e.substring(1)),d=/^(.+?)(ss|i)es$/,c=/^(.+?)([^s])s$/,d.test(e)?e=e.replace(d,"$1$2"):c.test(e)&&(e=e.replace(c,"$1$2")),d=/^(.+?)eed$/,c=/^(.+?)(ed|ing)$/,d.test(e)){const n=d.exec(e);d=RegExp(a),d.test(n[1])&&(d=/.$/,e=e.replace(d,""))}else c.test(e)&&(o=c.exec(e)[1],c=RegExp(u),c.test(o)&&(e=o,c=/(at|bl|iz)$/,h=/([^aeiouylsz])\1$/,m=RegExp("^"+i+t+"[^aeiouwxy]$"),c.test(e)?e+="e":h.test(e)?(d=/.$/,e=e.replace(d,"")):m.test(e)&&(e+="e")));if(d=/^(.+?)y$/,d.test(e)&&(o=d.exec(e)?.[1],d=RegExp(u),o&&d.test(o)&&(e=o+"i")),d=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,d.test(e)){const s=d.exec(e);o=s?.[1],l=s?.[2],d=RegExp(a),o&&d.test(o)&&(e=o+n[l])}if(d=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,d.test(e)){const n=d.exec(e);o=n?.[1],l=n?.[2],d=RegExp(a),o&&d.test(o)&&(e=o+s[l])}if(d=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,c=/^(.+?)(s|t)(ion)$/,d.test(e))o=d.exec(e)?.[1],d=RegExp(r),o&&d.test(o)&&(e=o);else if(c.test(e)){const n=c.exec(e);o=n?.[1]??""+n?.[2]??"",c=RegExp(r),c.test(o)&&(e=o)}return d=/^(.+?)e$/,d.test(e)&&(o=d.exec(e)?.[1],d=RegExp(r),c=RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$"),h=RegExp("^"+i+t+"[^aeiouwxy]$"),o&&(d.test(o)||c.test(o)&&!h.test(o))&&(e=o)),d=/ll$/,c=RegExp(r),d.test(e)&&c.test(e)&&(d=/.$/,e=e.replace(d,"")),"y"==f&&(e=f.toLowerCase()+e.substring(1)),e}const d=[65,65,65,65,65,65,65,67,69,69,69,69,73,73,73,73,null,78,79,79,79,79,79,79,79,85,85,85,85,null,null,null,97,97,97,97,97,97,97,99,101,101,101,101,105,105,105,105,null,110,111,111,111,111,111,111,111,117,117,117,117];function c(e){return 192>e||e>252?e:d[e-192]||e}const h=["arabic","armenian","dutch","english","french","greek","indonesian","italian","irish","indian","lithuanian","nepali","norwegian","portuguese","russian","spanish","swedish","german","finnish","danish","hungarian","romanian","serbian","turkish","ukrainian"];function m(e){return JSON.stringify(e,null,2)}function f(e){return"Invalid schema type. Expected string or object, but got "+e}function v(e,n){return`Invalid property name. Expected a wildcard string ("*") or array containing one of the following properties: ${n.join(", ")}, but got: ${e}`}function g(e,n,s){return`Unable to delete document "${e}" from index "${n}" on word "${s}".`}function b(){return"Custom stop words must be a function or an array of strings."}const k={english:["i","me","my","myself","we","us","our","ours","ourselves","you","your","yours","yourself","yourselves","he","him","his","himself","she","her","hers","herself","it","its","itself","they","them","their","theirs","themselves","what","which","who","whom","this","that","these","those","am","is","are","was","were","be","been","being","have","has","had","having","do","does","did","doing","will","would","shall","should","can","could","may","might","must","ought","i'm","you're","he's","she's","it's","we're","they're","i've","you've","we've","they've","i'd","you'd","he'd","she'd","we'd","they'd","i'll","you'll","he'll","she'll","we'll","they'll","isn't","aren't","wasn't","weren't","hasn't","haven't","hadn't","doesn't","don't","didn't","won't","wouldn't","shan't","shouldn't","can't","cannot","couldn't","mustn't","let's","that's","who's","what's","here's","there's","when's","where's","why's","how's","an","the","and","but","if","or","because","as","until","while","of","at","by","for","with","about","against","between","into","through","during","before","after","above","below","to","from","up","down","in","out","on","off","over","under","again","further","then","once","here","there","when","where","why","how","all","any","both","each","few","more","most","other","some","such","no","nor","not","only","own","same","so","than","too","very"],italian:["ad","al","allo","ai","agli","all","agl","alla","alle","con","col","coi","da","dal","dallo","dai","dagli","dall","dagl","dalla","dalle","di","del","dello","dei","degli","dell","degl","della","delle","in","nel","nello","nei","negli","nell","negl","nella","nelle","su","sul","sullo","sui","sugli","sull","sugl","sulla","sulle","per","tra","contro","io","tu","lui","lei","noi","voi","loro","mio","mia","miei","mie","tuo","tua","tuoi","tue","suo","sua","suoi","sue","nostro","nostra","nostri","nostre","vostro","vostra","vostri","vostre","mi","ti","ci","vi","lo","la","li","le","gli","ne","il","un","uno","una","ma","ed","se","perché","anche","come","dov","dove","che","chi","cui","non","più","quale","quanto","quanti","quanta","quante","quello","quelli","quella","quelle","questo","questi","questa","queste","si","tutto","tutti","a","c","e","i","l","o","ho","hai","ha","abbiamo","avete","hanno","abbia","abbiate","abbiano","avrò","avrai","avrà","avremo","avrete","avranno","avrei","avresti","avrebbe","avremmo","avreste","avrebbero","avevo","avevi","aveva","avevamo","avevate","avevano","ebbi","avesti","ebbe","avemmo","aveste","ebbero","avessi","avesse","avessimo","avessero","avendo","avuto","avuta","avuti","avute","sono","sei","è","siamo","siete","sia","siate","siano","sarò","sarai","sarà","saremo","sarete","saranno","sarei","saresti","sarebbe","saremmo","sareste","sarebbero","ero","eri","era","eravamo","eravate","erano","fui","fosti","fu","fummo","foste","furono","fossi","fosse","fossimo","fossero","essendo","faccio","fai","facciamo","fanno","faccia","facciate","facciano","farò","farai","farà","faremo","farete","faranno","farei","faresti","farebbe","faremmo","fareste","farebbero","facevo","facevi","faceva","facevamo","facevate","facevano","feci","facesti","fece","facemmo","faceste","fecero","facessi","facesse","facessimo","facessero","facendo","sto","stai","sta","stiamo","stanno","stia","stiate","stiano","starò","starai","starà","staremo","starete","staranno","starei","staresti","starebbe","staremmo","stareste","starebbero","stavo","stavi","stava","stavamo","stavate","stavano","stetti","stesti","stette","stemmo","steste","stettero","stessi","stesse","stessimo","stessero","stando"],french:["au","aux","avec","ce","ces","dans","de","des","du","elle","en","et","eux","il","je","la","le","leur","lui","ma","mais","me","même","mes","moi","mon","ne","nos","notre","nous","on","ou","par","pas","pour","qu","que","qui","sa","se","ses","son","sur","ta","te","tes","toi","ton","tu","un","une","vos","votre","vous","c","d","j","l","à","m","n","s","t","y","","été","étée","étées","étés","étant","suis","es","est","sommes","êtes","sont","serai","seras","sera","serons","serez","seront","serais","serait","serions","seriez","seraient","étais","était","étions","étiez","étaient","fus","fut","fûmes","fûtes","furent","sois","soit","soyons","soyez","soient","fusse","fusses","fût","fussions","fussiez","fussent","ayant","eu","eue","eues","eus","ai","as","avons","avez","ont","aurai","auras","aura","aurons","aurez","auront","aurais","aurait","aurions","auriez","auraient","avais","avait","avions","aviez","avaient","eut","eûmes","eûtes","eurent","aie","aies","ait","ayons","ayez","aient","eusse","eusses","eût","eussions","eussiez","eussent","ceci","cela","celà","cet","cette","ici","ils","les","leurs","quel","quels","quelle","quelles","sans","soi"],spanish:["de","la","que","el","en","y","a","los","del","se","las","por","un","para","con","no","una","su","al","lo","como","más","pero","sus","le","ya","o","este","sí","porque","esta","entre","cuando","muy","sin","sobre","también","me","hasta","hay","donde","quien","desde","todo","nos","durante","todos","uno","les","ni","contra","otros","ese","eso","ante","ellos","e","esto","mí","antes","algunos","qué","unos","yo","otro","otras","otra","él","tanto","esa","estos","mucho","quienes","nada","muchos","cual","poco","ella","estar","estas","algunas","algo","nosotros","mi","mis","tú","te","ti","tu","tus","ellas","nosotras","vosotros","vosotras","os","mío","mía","míos","mías","tuyo","tuya","tuyos","tuyas","suyo","suya","suyos","suyas","nuestro","nuestra","nuestros","nuestras","vuestro","vuestra","vuestros","vuestras","esos","esas","estoy","estás","está","estamos","estáis","están","esté","estés","estemos","estéis","estén","estaré","estarás","estará","estaremos","estaréis","estarán","estaría","estarías","estaríamos","estaríais","estarían","estaba","estabas","estábamos","estabais","estaban","estuve","estuviste","estuvo","estuvimos","estuvisteis","estuvieron","estuviera","estuvieras","estuviéramos","estuvierais","estuvieran","estuviese","estuvieses","estuviésemos","estuvieseis","estuviesen","estando","estado","estada","estados","estadas","estad","he","has","ha","hemos","habéis","han","haya","hayas","hayamos","hayáis","hayan","habré","habrás","habrá","habremos","habréis","habrán","habría","habrías","habríamos","habríais","habrían","había","habías","habíamos","habíais","habían","hube","hubiste","hubo","hubimos","hubisteis","hubieron","hubiera","hubieras","hubiéramos","hubierais","hubieran","hubiese","hubieses","hubiésemos","hubieseis","hubiesen","habiendo","habido","habida","habidos","habidas","soy","eres","es","somos","sois","son","sea","seas","seamos","seáis","sean","seré","serás","será","seremos","seréis","serán","sería","serías","seríamos","seríais","serían","era","eras","éramos","erais","eran","fui","fuiste","fue","fuimos","fuisteis","fueron","fuera","fueras","fuéramos","fuerais","fueran","fuese","fueses","fuésemos","fueseis","fuesen","siendo","sido","tengo","tienes","tiene","tenemos","tenéis","tienen","tenga","tengas","tengamos","tengáis","tengan","tendré","tendrás","tendrá","tendremos","tendréis","tendrán","tendría","tendrías","tendríamos","tendríais","tendrían","tenía","tenías","teníamos","teníais","tenían","tuve","tuviste","tuvo","tuvimos","tuvisteis","tuvieron","tuviera","tuvieras","tuviéramos","tuvierais","tuvieran","tuviese","tuvieses","tuviésemos","tuvieseis","tuviesen","teniendo","tenido","tenida","tenidos","tenidas","tened"],portuguese:["de","a","o","que","e","do","da","em","um","para","com","não","uma","os","no","se","na","por","mais","as","dos","como","mas","ao","ele","das","à","seu","sua","ou","quando","muito","nos","já","eu","também","só","pelo","pela","até","isso","ela","entre","depois","sem","mesmo","aos","seus","quem","nas","me","esse","eles","você","essa","num","nem","suas","meu","às","minha","numa","pelos","elas","qual","nós","lhe","deles","essas","esses","pelas","este","dele","tu","te","vocês","vos","lhes","meus","minhas","teu","tua","teus","tuas","nosso","nossa","nossos","nossas","dela","delas","esta","estes","estas","aquele","aquela","aqueles","aquelas","isto","aquilo","estou","está","estamos","estão","estive","esteve","estivemos","estiveram","estava","estávamos","estavam","estivera","estivéramos","esteja","estejamos","estejam","estivesse","estivéssemos","estivessem","estiver","estivermos","estiverem","hei","há","havemos","hão","houve","houvemos","houveram","houvera","houvéramos","haja","hajamos","hajam","houvesse","houvéssemos","houvessem","houver","houvermos","houverem","houverei","houverá","houveremos","houverão","houveria","houveríamos","houveriam","sou","somos","são","era","éramos","eram","fui","foi","fomos","foram","fora","fôramos","seja","sejamos","sejam","fosse","fôssemos","fossem","for","formos","forem","serei","será","seremos","serão","seria","seríamos","seriam","tenho","tem","temos","tém","tinha","tínhamos","tinham","tive","teve","tivemos","tiveram","tivera","tivéramos","tenha","tenhamos","tenham","tivesse","tivéssemos","tivessem","tiver","tivermos","tiverem","terei","terá","teremos","terão","teria","teríamos","teriam"],dutch:["de","en","van","ik","te","dat","die","in","een","hij","het","niet","zijn","is","was","op","aan","met","als","voor","had","er","maar","om","hem","dan","zou","of","wat","mijn","men","dit","zo","door","over","ze","zich","bij","ook","tot","je","mij","uit","der","daar","haar","naar","heb","hoe","heeft","hebben","deze","u","want","nog","zal","me","zij","nu","ge","geen","omdat","iets","worden","toch","al","waren","veel","meer","doen","toen","moet","ben","zonder","kan","hun","dus","alles","onder","ja","eens","hier","wie","werd","altijd","doch","wordt","wezen","kunnen","ons","zelf","tegen","na","reeds","wil","kon","niets","uw","iemand","geweest","andere"],swedish:["och","det","att","i","en","jag","hon","som","han","på","den","med","var","sig","för","så","till","är","men","ett","om","hade","de","av","icke","mig","du","henne","då","sin","nu","har","inte","hans","honom","skulle","hennes","där","min","man","ej","vid","kunde","något","från","ut","när","efter","upp","vi","dem","vara","vad","över","än","dig","kan","sina","här","ha","mot","alla","under","någon","eller","allt","mycket","sedan","ju","denna","själv","detta","åt","utan","varit","hur","ingen","mitt","ni","bli","blev","oss","din","dessa","några","deras","blir","mina","samma","vilken","er","sådan","vår","blivit","dess","inom","mellan","sådant","varför","varje","vilka","ditt","vem","vilket","sitta","sådana","vart","dina","vars","vårt","våra","ert","era","vilkas"],russian:["и","в","во","не","что","он","на","я","с","со","как","а","то","все","она","так","его","но","да","ты","к","у","же","вы","за","бы","по","только","ее","мне","было","вот","от","меня","еще","нет","о","из","ему","теперь","когда","даже","ну","вдруг","ли","если","уже","или","ни","быть","был","него","до","вас","нибудь","опять","уж","вам","сказал","ведь","там","потом","себя","ничего","ей","может","они","тут","где","есть","надо","ней","для","мы","тебя","их","чем","была","сам","чтоб","без","будто","человек","чего","раз","тоже","себе","под","жизнь","будет","ж","тогда","кто","этот","говорил","того","потому","этого","какой","совсем","ним","здесь","этом","один","почти","мой","тем","чтобы","нее","кажется","сейчас","были","куда","зачем","сказать","всех","никогда","сегодня","можно","при","наконец","два","об","другой","хоть","после","над","больше","тот","через","эти","нас","про","всего","них","какая","много","разве","сказала","три","эту","моя","впрочем","хорошо","свою","этой","перед","иногда","лучше","чуть","том","нельзя","такой","им","более","всегда","конечно","всю","между"],norwegian:["og","i","jeg","det","at","en","et","den","til","er","som","på","de","med","han","av","ikke","ikkje","der","så","var","meg","seg","men","ett","har","om","vi","min","mitt","ha","hadde","hun","nå","over","da","ved","fra","du","ut","sin","dem","oss","opp","man","kan","hans","hvor","eller","hva","skal","selv","sjøl","her","alle","vil","bli","ble","blei","blitt","kunne","inn","når","være","kom","noen","noe","ville","dere","som","deres","kun","ja","etter","ned","skulle","denne","for","deg","si","sine","sitt","mot","å","meget","hvorfor","dette","disse","uten","hvordan","ingen","din","ditt","blir","samme","hvilken","hvilke","sånn","inni","mellom","vår","hver","hvem","vors","hvis","både","bare","enn","fordi","før","mange","også","slik","vært","være","båe","begge","siden","dykk","dykkar","dei","deira","deires","deim","di","då","eg","ein","eit","eitt","elles","honom","hjå","ho","hoe","henne","hennar","hennes","hoss","hossen","ikkje","ingi","inkje","korleis","korso","kva","kvar","kvarhelst","kven","kvi","kvifor","me","medan","mi","mine","mykje","no","nokon","noka","nokor","noko","nokre","si","sia","sidan","so","somt","somme","um","upp","vere","vore","verte","vort","varte","vart"],german:["aber","alle","allem","allen","aller","alles","als","also","am","an","ander","andere","anderem","anderen","anderer","anderes","anderm","andern","anderr","anders","auch","auf","aus","bei","bin","bis","bist","da","damit","dann","der","den","des","dem","die","das","daß","derselbe","derselben","denselben","desselben","demselben","dieselbe","dieselben","dasselbe","dazu","dein","deine","deinem","deinen","deiner","deines","denn","derer","dessen","dich","dir","du","dies","diese","diesem","diesen","dieser","dieses","doch","dort","durch","ein","eine","einem","einen","einer","eines","einig","einige","einigem","einigen","einiger","einiges","einmal","er","ihn","ihm","es","etwas","euer","eure","eurem","euren","eurer","eures","für","gegen","gewesen","hab","habe","haben","hat","hatte","hatten","hier","hin","hinter","ich","mich","mir","ihr","ihre","ihrem","ihren","ihrer","ihres","euch","im","in","indem","ins","ist","jede","jedem","jeden","jeder","jedes","jene","jenem","jenen","jener","jenes","jetzt","kann","kein","keine","keinem","keinen","keiner","keines","können","könnte","machen","man","manche","manchem","manchen","mancher","manches","mein","meine","meinem","meinen","meiner","meines","mit","muss","musste","nach","nicht","nichts","noch","nun","nur","ob","oder","ohne","sehr","sein","seine","seinem","seinen","seiner","seines","selbst","sich","sie","ihnen","sind","so","solche","solchem","solchen","solcher","solches","soll","sollte","sondern","sonst","über","um","und","uns","unse","unsem","unsen","unser","unses","unter","viel","vom","von","vor","während","war","waren","warst","was","weg","weil","weiter","welche","welchem","welchen","welcher","welches","wenn","werde","werden","wie","wieder","will","wir","wird","wirst","wo","wollen","wollte","würde","würden","zu","zum","zur","zwar","zwischen"],danish:["og","i","jeg","det","at","en","den","til","er","som","på","de","med","han","af","for","ikke","der","var","mig","sig","men","et","har","om","vi","min","havde","ham","hun","nu","over","da","fra","du","ud","sin","dem","os","op","man","hans","hvor","eller","hvad","skal","selv","her","alle","vil","blev","kunne","ind","når","være","dog","noget","ville","jo","deres","efter","ned","skulle","denne","end","dette","mit","også","under","have","dig","anden","hende","mine","alt","meget","sit","sine","vor","mod","disse","hvis","din","nogle","hos","blive","mange","ad","bliver","hendes","været","thi","jer","sådan"],finnish:["olla","olen","olet","on","olemme","olette","ovat","ole","oli","olisi","olisit","olisin","olisimme","olisitte","olisivat","olit","olin","olimme","olitte","olivat","ollut","olleet","en","et","ei","emme","ette","eivät","minä","minun","minut","minua","minussa","minusta","minuun","minulla","minulta","minulle","sinä","sinun","sinut","sinua","sinussa","sinusta","sinuun","sinulla","sinulta","sinulle","hän","hänen","hänet","häntä","hänessä","hänestä","häneen","hänellä","häneltä","hänelle","me","meidän","meidät","meitä","meissä","meistä","meihin","meillä","meiltä","meille","te","teidän","teidät","teitä","teissä","teistä","teihin","teillä","teiltä","teille","he","heidän","heidät","heitä","heissä","heistä","heihin","heillä","heiltä","heille","tämä","tämän","tätä","tässä","tästä","tähän","tällä","tältä","tälle","tänä","täksi","tuo","tuon","tuota","tuossa","tuosta","tuohon","tuolla","tuolta","tuolle","tuona","tuoksi","se","sen","sitä","siinä","siitä","siihen","sillä","siltä","sille","sinä","siksi","nämä","näiden","näitä","näissä","näistä","näihin","näillä","näiltä","näille","näinä","näiksi","nuo","noiden","noita","noissa","noista","noihin","noilla","noilta","noille","noina","noiksi","ne","niiden","niitä","niissä","niistä","niihin","niillä","niiltä","niille","niinä","niiksi","kuka","kenen","kenet","ketä","kenessä","kenestä","keneen","kenellä","keneltä","kenelle","kenenä","keneksi","ketkä","keiden","ketkä","keitä","keissä","keistä","keihin","keillä","keiltä","keille","keinä","keiksi","mikä","minkä","minkä","mitä","missä","mistä","mihin","millä","miltä","mille","minä","miksi","mitkä","joka","jonka","jota","jossa","josta","johon","jolla","jolta","jolle","jona","joksi","jotka","joiden","joita","joissa","joista","joihin","joilla","joilta","joille","joina","joiksi","että","ja","jos","koska","kuin","mutta","niin","sekä","sillä","tai","vaan","vai","vaikka","kanssa","mukaan","noin","poikki","yli","kun","niin","nyt","itse"]},p=Object.keys(k),w={dutch:/[^a-z0-9_'-]+/gim,english:/[^a-z0-9_'-]+/gim,french:/[^a-z0-9äâàéèëêïîöôùüûœç-]+/gim,italian:/[^a-z0-9_'-]+/gim,norwegian:/[^a-z0-9_æøåÆØÅäÄöÖüÜ]+/gim,portuguese:/[^a-z0-9à-úÀ-Ú]/gim,russian:/[^a-z0-9а-яА-ЯёЁ]+/gim,spanish:/[^a-z0-9A-Zá-úÁ-ÚñÑüÜ]+/gim,swedish:/[^a-z0-9_åÅäÄöÖüÜ-]+/gim,german:/[^a-z0-9A-ZäöüÄÖÜß]+/gim,finnish:/[^a-z0-9äöÄÖ]+/gim,danish:/[^a-z0-9æøåÆØÅ]+/gim,hungarian:/[^a-z0-9áéíóöőúüűÁÉÍÓÖŐÚÜŰ]+/gim,romanian:/[^a-z0-9ăâîșțĂÂÎȘȚ]+/gim,serbian:/[^a-z0-9čćžšđČĆŽŠĐ]+/gim,turkish:/[^a-z0-9çÇğĞıİöÖşŞüÜ]+/gim,lithuanian:/[^a-z0-9ąčęėįšųūžĄČĘĖĮŠŲŪŽ]+/gim,arabic:/[^a-z0-9أ-ي]+/gim,nepali:/[^a-z0-9अ-ह]+/gim,irish:/[^a-z0-9áéíóúÁÉÍÓÚ]+/gim,indian:/[^a-z0-9अ-ह]+/gim,armenian:/[^a-z0-9ա-ֆ]+/gim,greek:/[^a-z0-9α-ωά-ώ]+/gim,indonesian:/[^a-z0-9]+/gim,ukrainian:/[^a-z0-9а-яА-ЯіїєІЇЄ]+/gim},y=new Map;function j(e){if(!h.includes(e))throw Error(function(e){return`Language "${e}" is not supported.\nSupported languages are:\n - ${h.join("\n - ")}`}(e))}function z(e,n="english",s=!1,t=x(n)){if("string"!=typeof e)return[e];const i=w[n],o=function(e){for(;""===e[e.length-1];)e.pop();for(;""===e[0];)e.shift();return e}(e.toLowerCase().split(i).map((e=>function(e,n,s){const t=`${n}:${e}`;if(y.has(t))return y.get(t);if((null==s?void 0:s.enableStopWords)&&s.customStopWords.includes(e)){const e="";return y.set(t,e),e}return(null==s?void 0:s.enableStemming)&&"function"==typeof(null==s?void 0:s.stemmingFn)&&(e=null==s?void 0:s.stemmingFn(e)),e=function(e){const n=[];for(let s=0;e.length>s;s++)n[s]=c(e.charCodeAt(s));return String.fromCharCode(...n)}(e),y.set(t,e),e}(e,n,t))).filter(Boolean));return s?o:Array.from(new Set(o))}function x(e,n={}){let s,t=[],i=[],o=z;if(null==n?void 0:n.tokenizerFn){if("function"!=typeof n.tokenizerFn)throw Error(function(){return"tokenizer.tokenizerFn must be a function."}());o=n.tokenizerFn}else{if(null==n?void 0:n.stemmingFn){if("function"!=typeof n.stemmingFn)throw Error(function(){return"tokenizer.stemmingFn property must be a function."}());s=n.stemmingFn}else s=l;if(p.includes(e)&&(t=k[e]??[]),null==n?void 0:n.customStopWords)switch(typeof n.customStopWords){case"function":i=n.customStopWords(t);break;case"object":if(!Array.isArray(n.customStopWords))throw Error(b());if(i=n.customStopWords,i.some((e=>"string"!=typeof e)))throw Error(function(){return"Custom stop words array must only contain strings."}());break;default:throw Error(b())}}return{enableStopWords:(null==n?void 0:n.enableStopWords)??!0,enableStemming:(null==n?void 0:n.enableStemming)??!0,stemmingFn:s,customStopWords:i??t,tokenizerFn:o,assertSupportedLanguage:n.assertSupportedLanguage??j}}const L=(""+Date.now()).slice(5);let $=0;function q(){return"undefined"!=typeof process&&void 0!==process.hrtime?process.hrtime.bigint():"undefined"!=typeof performance?BigInt(Math.floor(1e6*performance.now())):BigInt(0)}function E(){return`${L}-${$++}`}function O(e,n){return void 0===Object.hasOwn?Object.prototype.hasOwnProperty.call(e,n)?e[n]:void 0:Object.hasOwn(e,n)?e[n]:void 0}function S(e,n){return n[1]-e[1]}function C(e=!1,n="",s=""){const t={id:E(),key:s,subWord:n,parent:null,children:{},docs:[],end:e,word:""};return Object.defineProperty(t,"toJSON",{value:I}),t}function F(e,n){e.parent=n.id,e.word=n.word+e.subWord}function W(e,n){e.docs.push(n)}function A(e,n){const s=e.docs.indexOf(n);return-1!==s&&(e.docs.splice(s,1),!0)}function I(){const{word:e,subWord:n,children:s,docs:t,end:i}=this;return{word:e,subWord:n,children:s,docs:t,end:i}}BigInt(1e3),BigInt(1e6),BigInt(1e9);const R=["afterInsert"];async function B(e,...n){const s=Array.isArray(e)?e:[e];for(let e=0;s.length>e;e++)await s[e].apply(this,n)}function M(e){if(0===e.length)return[];for(let n=1;e.length>n;n++)if(e[0].length>e[n].length){const s=e[0];e[0]=e[n],e[n]=s}const n=new Map;for(const s of e[0])n.set(s[0],[1,s[1]]);const s=e.length;for(let t=1;s>t;t++){let s=0;for(const i of e[t]){const e=i[0]??"",[o,a]=n.get(e)??[0,0];o===t&&(n.set(e,[o+1,a+i[1]]),s++)}if(0===s)return[]}const t=[];for(const[e,[i,o]]of n)i===s&&t.push([e,o]);return t}function T(e,n){if(0===n)throw Error(function(){return"Boost value must be a number greater than, or less than 0."}());const s={},t=e.length;for(let i=0;t>i;i++){const t=e[i],o=t.length;for(let e=0;o>e;e++){const[i,o]=t[e],a=o*n;i in s?s[i]*=1.5+a:s[i]=a}}return Object.entries(s).sort(((e,n)=>n[1]-e[1]))}function D(e,n,s,t,i,o){const{k:a,b:r,d:u}=o;return Math.log(1+(s-n+.5)/(n+.5))*(u+e*(a+1))/(e+a*(1-r+r*t/i))}function _(e,n,s=""){for(const t of Object.keys(n)){const i=typeof t,o="object"==typeof n[t];if("string"!==i)throw Error(f(i));const a=`${s}${t}`;o?_(e,n[t],a+"."):(e.index[a]=C(),e.avgFieldLength[a]=0)}}var N;const P=Symbol("lyra.insertions"),U=(null===(N=globalThis.process)||void 0===N?void 0:N.emitWarning)??function(e,n){console.warn(`[WARNING] [${n.code}] ${e}`)};function G(e){const n=e;"number"!=typeof n[P]&&(queueMicrotask((()=>{n[P]=void 0})),n[P]=0),n[P]>1e3?(U("Lyra's insert operation is synchronous. Please avoid inserting a large number of document in a single operation in order not to block the main thread.",{code:"LYRA0001"}),n[P]=-1):0>n[P]||n[P]++}function H(e,n,s){for(let t=0;n.length>t;t++){const i=n[t],o=n.substring(t),a=e.children[i];if(!(i in e.children)){const n=C(!0,o,i);return W(n,s),e.children[i]=n,void F(n,e)}{const r=a.subWord,u=r.length,l=Y(r,o),d=l.length,c=r[d];if(r===o)return W(a,s),void(a.end=!0);if(u>d&&d===o.length){const n=C(!0,o,i);n.children[c]=a;const s=n.children[c];return s.subWord=r.substring(d),s.key=c,e.children[i]=n,F(n,e),void F(s,n)}if(u>d&&o.length>d){const u=C(!1,l,i);u.children[c]=a,e.children[i]=u;const h=u.children[c];h.subWord=r.substring(d),h.key=c;const m=o[d],f=C(!0,n.substring(t+d),m);return W(f,s),u.children[m]=f,F(u,e),F(f,u),void F(h,u)}t+=u-1,e=a}}}function J(e,{term:n,exact:s,tolerance:t}){for(let s=0;n.length>s;s++){const i=n[s];if(!(i in e.children))return{};{const o=e.children[i],a=o.subWord,r=n.substring(s),u=Y(a,r).length;if(u!==a.length&&u!==r.length){if(t)break;return{}}s+=o.subWord.length-1,e=o}}const i={};return Z(e,i,n,s,t),i}function Z(e,n,s,t,i){if(e.end){const{word:o,docs:a}=e;if(t&&o!==s)return{};if(O(n,o)||(i?i>=Math.abs(s.length-o.length)&&function(e,n,s){const t=function(e,n,s){if(e===n)return 0;const t=e;e.length>n.length&&(e=n,n=t);let i=e.length,o=n.length;for(;i>0&&e.charCodeAt(~-i)===n.charCodeAt(~-o);)i--,o--;if(!i)return o>s?-1:o;let a=0;for(;i>a&&e.charCodeAt(a)===n.charCodeAt(a);)a++;if(i-=a,o-=a,0===i)return o>s?-1:o;const r=o-i;if(s>o)s=o;else if(r>s)return-1;let u=0;const l=[],d=[];for(;s>u;)d[u]=n.charCodeAt(a+u),l[u]=++u;for(;o>u;)d[u]=n.charCodeAt(a+u),l[u++]=s+1;const c=s-r,h=o>s;let m=0,f=s,v=0,g=0,b=0,k=0,p=0;for(u=0;i>u;u++){for(g=u,v=u+1,k=e.charCodeAt(a+u),m+=u>c?1:0,f+=o>f?1:0,p=m;f>p;p++)b=v,v=g,g=l[p],k!==d[p]&&(v>g&&(v=g),v>b&&(v=b),v++),l[p]=v;if(h&&l[u+r]>s)return-1}return v>s?-1:v}(e,n,s);return{distance:t,isBounded:t>=0}}(s,o,i).isBounded&&(n[o]=[]):n[o]=[]),O(n,o)&&a.length){const e=new Set(n[o]),s=a.length;for(let n=0;s>n;n++)e.add(a[n]);n[o]=Array.from(e)}}for(const o of Object.keys(e.children))Z(e.children[o],n,s,t,i);return n}function Y(e,n){let s="";const t=Math.min(e.length,n.length);for(let i=0;t>i;i++){if(e[i]!==n[i])return s;s+=e[i]}return s}function K(e,n,s,t=!0){if(!n)return!0;for(let i=0;n.length>i;i++){const o=n[i];if(!(o in e.children))return!1;{const a=e.children[o];if(i+=a.subWord.length-1,e=a,t&&e.word!==n)continue;A(e,s)}}return!0}function Q(e,n){if(!V(e,n))throw Error(function(e,n){return`Invalid document structure. \nLyra has been initialized with the following schema: \n\n${m(e)}\n\nbut found the following doc:\n\n${m(n)}`}(n,e))}function V(e,n){for(const s in e)if(s in n)if("object"==typeof e[s])V(e[s],n);else if(typeof e[s]!==n[s])return!1;return!0}async function X(e,n,s){var t,i,o,a;s={language:e.defaultLanguage,...s};const r=await ne(n,s);return null===(t=e.components)||void 0===t||null===(i=t.tokenizer)||void 0===i||null===(o=i.assertSupportedLanguage)||void 0===o||o.call(i,s.language),Q(n,e.schema),e.docs[r]=n,e.docsCount++,ee(e,n,r,s,void 0,null===(a=e.components)||void 0===a?void 0:a.tokenizer),G(e),e.hooks.afterInsert&&await B.call(e,e.hooks.afterInsert,r),{id:r}}function ee(e,n,s,t,i="",o,a=e.schema){t={language:e.defaultLanguage,...t};const{index:r,frequencies:u,tokenOccurrencies:l}=e;for(const d of Object.keys(n)){const c="object"==typeof a[d],h=`${i}${d}`;if("object"==typeof n[d]&&d in a&&c&&ee(e,n[d],s,t,h+".",o,a[d]),"string"==typeof n[d]&&d in a&&!c){const i=r[h],a=o.tokenizerFn(n[d],t.language,!1,o);h in u||(u[h]={}),h in l||(l[h]={}),s in u[h]||(u[h][s]={}),h in e.fieldLengths||(e.fieldLengths[h]={}),e.fieldLengths[h][s]=a.length,e.avgFieldLength[h]=((e.avgFieldLength[h]??0)*(e.docsCount-1)+a.length)/e.docsCount;for(const e of a){let n=0;for(const s of a)s===e&&n++;u[h][s][e]=n/a.length,e in l[h]||(l[h][e]=0),l[h][e]=(l[h][e]??0)+1,H(i,e,s)}}}}async function ne(e,n){let s;if(null==n?void 0:n.id)s=await n.id(e);else if(e.id&&"string"==typeof e.id)s=e.id;else{if(e.id&&"string"!=typeof e.id)throw new TypeError(function(e){return`"id" must be of type "string". Got "${e}" instead.`}(typeof e.id));s=E()}return s}function se(e,n){const s=J(e.index[n.index],{term:n.term,exact:n.exact,tolerance:n.tolerance}),t=new Set;for(const e in s)for(const n of s[e])t.add(n);return Array.from(t)}const te={k:1.2,b:.75,d:.5};return e.create=async function(e){var n,s,t,i;const o=(null==e||null===(n=e.defaultLanguage)||void 0===n?void 0:n.toLowerCase())??"english",a=x(o,(null===(s=e.components)||void 0===s?void 0:s.tokenizer)??{});a.assertSupportedLanguage(o),function(e){if(e){if("object"!=typeof e)throw Error(function(){return"Invalid hooks object"}());const n=Object.keys(e).filter((e=>!R.includes(e)));if(n.length)throw Error(function(e){return"The following hooks aren't supported. Hooks: "+e}(n))}}(e.hooks);const r={defaultLanguage:o,schema:e.schema,docs:{},docsCount:0,index:{},hooks:e.hooks||{},edge:e.edge??!1,frequencies:{},tokenOccurrencies:{},avgFieldLength:{},fieldLengths:{},components:{tokenizer:a,algorithms:{intersectTokenScores:(null===(t=e.components)||void 0===t||null===(i=t.algorithms)||void 0===i?void 0:i.intersectTokenScores)??M}}};return _(r,e.schema),r},e.insert=async function(e,n,s){var t,i,o,a;s={language:e.defaultLanguage,...s};const r=await ne(n,s);if(e.docs[r])throw Error(function(e){return`Document with ID "${e}" already exists.`}(r));return null===(t=e.components)||void 0===t||null===(i=t.tokenizer)||void 0===i||null===(o=i.assertSupportedLanguage)||void 0===o||o.call(i,s.language),Q(n,e.schema),e.docs[r]=n,e.docsCount++,ee(e,n,r,s,void 0,null===(a=e.components)||void 0===a?void 0:a.tokenizer),G(e),{id:r}},e.insertBatch=async function(e,n,s){const t=(null==s?void 0:s.batchSize)??1e3;return new Promise(((i,o)=>{let a=0;setTimeout((async function r(){const u=n.slice(a*t,(a+1)*t);if(a++,!u.length)return i();for(const n of u)try{await X(e,n,s)}catch(e){o(e)}setTimeout(r,0)}),0)}))},e.insertWithHooks=X,e.load=async function(e,{index:n,docs:s,schema:t,frequencies:i,tokenOccurrencies:o,defaultLanguage:a,fieldLengths:r,avgFieldLength:u}){if(!e.edge)throw Error(function(){return"load works on edge only. Use edge: true in Lyra constructor to enable it."}());e.index=n,e.docs=s,e.docsCount=Object.keys(s).length,e.schema=t,e.frequencies=i,e.tokenOccurrencies=o,e.defaultLanguage=a,e.fieldLengths=r,e.avgFieldLength=u},e.remove=async function(e,n){var s;if((null===(s=e.components)||void 0===s?void 0:s.tokenizer)||(e.components={...e.components??{},tokenizer:x(e.defaultLanguage)}),!(n in e.docs))throw Error(function(e){return`Document with ID ${e} does not exists`}(n));const t=e.docs[n]||{},i=Object.keys(t||{}),o=i.length;for(let s=0;o>s;s++){const o=i[s];if("string"===e.schema[o]){const s=e.index[o],i=e.components.tokenizer.tokenizerFn(t[o],e.defaultLanguage,!1,e.components.tokenizer);e.avgFieldLength[o]=(e.avgFieldLength[o]*e.docsCount-e.fieldLengths[o][n])/(e.docsCount-1),delete e.fieldLengths[o][n];const a=i.length;for(let t=0;a>t;t++){const a=i[t];if(delete e.frequencies[o][n],e.tokenOccurrencies[o][a]--,a&&!K(s,a,n))throw Error(g(n,o,a))}}}return e.docs[n]=void 0,e.docsCount--,!0},e.save=async function(e){return{index:e.index,docs:e.docs,schema:e.schema,frequencies:e.frequencies,tokenOccurrencies:e.tokenOccurrencies,defaultLanguage:e.defaultLanguage,avgFieldLength:e.avgFieldLength,fieldLengths:e.fieldLengths}},e.search=async function(e,n,s){var t;s||(s=e.defaultLanguage),(null===(t=e.components)||void 0===t?void 0:t.tokenizer)||(e.components={...e.components??{},tokenizer:x(s)}),n.relevance=function(e=te){return Object.assign({},te,e)}(n.relevance);const{limit:i=10,offset:o=0,exact:a=!1,term:r,properties:u}=n,l=e.components.tokenizer.tokenizerFn(r,s,!1,e.components.tokenizer),d=function(e,n){const s=Object.keys(e.index);if(!n)return s;if("string"==typeof n){if("*"!==n)throw Error(v(n,s));return s}for(const e of n)if(!s.includes(e))throw Error(v(e,s));return n}(e,u),c=Array.from({length:i}),h=e.docsCount,m=q(),f={},g={},b={};for(const e of d){const n={};for(const e of l)n[e]=[];g[e]=n,b[e]=[]}const k=d.length;for(let s=0;k>s;s++){var p;const t=d[s],i=e.avgFieldLength[t],o=e.fieldLengths[t];if(!(t in e.tokenOccurrencies))continue;const r=e.tokenOccurrencies[t],u=e.frequencies[t],c=l.length;for(let s=0;c>s;s++){const d=l[s],c=se(e,{...n,index:t,term:d,exact:a}),m="number"==typeof r[d]?r[d]??0:0,f=[],v=c.length;for(let e=0;v>e;e++){var w;const s=c[e],t=D((null==u||null===(w=u[s])||void 0===w?void 0:w[d])??0,m,h,o[s],i,n.relevance);f.push([s,t])}g[t][d].push(...f)}const m=Object.values(g[t]);b[t]=T(m,(null==n||null===(p=n.boost)||void 0===p?void 0:p[t])??1);const v=b[t],k=v.length;for(let e=0;k>e;e++){const[n,s]=v[e],t=f[n];f[n]=t?t+s+.5:s}}const y=Object.entries(f).sort(S),j=new Set;for(let n=o;i+o>n;n++){const s=y[n];if(void 0===s)break;const[t,i]=s;j.has(t)||(c[n]={id:t,score:i,document:e.docs[t]},j.add(t))}const z=c.filter(Boolean);return{elapsed:q()-m,hits:z,count:Object.keys(f).length}},e}({});
